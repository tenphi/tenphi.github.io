import{E as t,W as e,i as s,d as i}from"./index-957404e9.js";const r={email:e=>t(import("./index-b7a67c28.js")).then(t=>t.validate(e)),maxlength:(t,e)=>Promise.resolve().then(()=>t.length<=Number(e)),minlength:(t,e)=>Promise.resolve().then(()=>t.length>=Number(e)),required:t=>Promise.resolve().then(()=>{switch(typeof t){case"string":return t.length>0;case"number":return t==t;case"boolean":return!0;default:return null!=t}})};export default class extends e{static get params(){return{input:!0,primary:!0,provideValue:!1,contextValue:!1}}init(){this.value={},this.validators={},this.checks={},this.fields={},super.init();const{host:t}=this;t.nuSetMod("form",!0),this.value||(this.value={}),this.setContext("form",this),this.context.value=null,this.on("nu-blur",t=>{const e=t.detail;this.fields[e]&&this.verifyData(e)}),this.provideAction("submit",()=>{this.verifyData().then(t=>{t&&(this.emit("input",this.value),this.control())})})}verifyData(t){return(t?Promise.resolve():this.setDirty()).then(()=>this.validate()).then(e=>(this.setErrorProps(t),e))}connected(){super.connected(),setTimeout(()=>this.validate(!0))}setValue(t,e){if("object"!=typeof t)return;const s=JSON.stringify(t);JSON.stringify(t)!==this._serializedValue&&t&&(this._serializedValue=s,this.value=t,e||this.validate().then(t=>{t&&this.emit("input",this.value)}),this.control())}setFieldValue(t,e){const{fields:i}=this;s(this.value[t],e)||(null!=e?(this.value[t]=e,i[t]&&this.resetFieldWarning(t)):delete this.value[t],this.validate())}registerCheck(t,e,s,i){this.validators[t]||(this.validators[t]={}),this.checks[t]||(this.checks[t]={}),this.validators[t][s]=i,this.checks[t][s]=e}registerField(t,e){this.fields[t]=e}unregisterCheck(t,e){delete this.validators[t][e],delete this.checks[t][e]}unregisterField(t){delete this.fields[t]}connectForm(){super.connectForm();const t=this.validators;this.validators=Object.create(this.form.validators),Object.keys(t).forEach(e=>{this.validators[e]=t[e]})}validate(t){return function(t,e){const s=Object.keys(e),i={};return Object.keys(t).forEach(e=>{const s=t[e];"object"==typeof s&&s.$errors&&(i[e]=s.$errors)}),Promise.all(s.map(s=>{const i=e[s];if(!i)return!0;const a=Object.keys(i);return Promise.all(a.map(e=>{const a=i[e],h=r[e];return!h||h(t[s],a)})).then(t=>!t.every(t=>t)&&a.reduce((e,s,i)=>(t[i]||(e[s]=!0),e),{}))})).then(t=>s.reduce((e,s,i)=>(t[i]&&(e[s]=t[i]),e),i)).then(()=>!!Object.keys(i).length&&i)}(this.value,this.validators).then(t=>(t?this.value.$errors=t:delete this.value.$errors,!t))}setDirty(){const t=i(this.host,"[is-form]");return this.dirty=!0,Promise.all(t.map(t=>t.nu("form").then(t=>t.setDirty().then(()=>t.validate()).then(()=>t.setErrorProps()))))}setErrorProps(t){const e=Object.keys(this.validators),s=this.value.$errors||{},i=this.fields,r=this.checks;e.forEach(e=>{if(t&&t!==e)return;const a=Object.keys(this.validators[e]),h=r[e];let o=!1;for(let t of a)s&&s[e]&&s[e][t]&&!o?(o=!0,h[t].setValidity(!1)):h[t].setValidity(!0);i[e]&&i[e].setValidity(!o)})}resetFieldWarning(t){const e=this.fields[t],s=Object.keys(this.validators[t]||{});for(let e of s){const s=`--nu-check-${t}-${e}`;this.host.style.setProperty(s,"none")}e&&e.setValidity(!0)}}
