import{B as e,f as t}from"./index-957404e9.js";export default class extends e{connected(){const{host:e}=this,n=this.parent=this.host.parentNode;n&&n.nuElement&&!n.hasAttribute("describedby")&&n.setAttribute("describedby",this.nuId);let s=!1,o=!1;e.hidden=!0,this.setMod("tooltip",!0);const i=()=>{s=!0,o||(this.nu("fixate").then(e=>e.start()),e.hidden=!1,n.nuSetMod("tooltip-shown",!0),setTimeout(()=>{t(e)}))},d=()=>{s=!1,o=!1,this.nu("fixate").then(e=>e.end()),e.hidden=!0,n.nuSetMod("tooltip-shown",!1)},h=()=>{o=!0,s||(this.nu("fixate").then(e=>e.start()),e.hidden=!1,n.nuSetMod("tooltip-shown",!0))},r=()=>{o=!1,s||(this.nu("fixate").then(e=>e.end()),e.hidden=!0,n.nuSetMod("tooltip-shown",!1))};n.addEventListener("mouseenter",i),n.addEventListener("mouseleave",d),this.removeListeners=()=>{n.removeEventListener("mouseenter",i),n.removeEventListener("mouseleave",d)},e.nuSetContextHook("focus",e=>{e?h():r()})}disconnected(){const e=this.removeListeners;e&&e()}}
