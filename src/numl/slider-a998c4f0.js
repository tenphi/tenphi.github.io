import{W as t,z as e,i as s}from"./index-957404e9.js";const i={mousemove:"onDragging",touchmove:"onDragging",mouseup:"onDragEnd",touchend:"onDragEnd",contextmenu:"onDragEnd"};export default class extends t{static get params(){return{input:!0}}init(){this.props.value=t=>{this.setValue(e(t,0),!0)},this.props.min=t=>e(t,0),this.props.max=t=>e(t,100),this.props.step=t=>e(t,1),super.init(),this.require("orient","active","focusable"),this.on("keydown",t=>{const e=this.step*(t.shiftKey?10:1);switch(t.key){case"ArrowUp":case"ArrowRight":this.setValue(this.value+e);break;case"ArrowDown":case"ArrowLeft":this.setValue(this.value-e);break;default:return}t.preventDefault()})}connected(){super.connected();const{host:t}=this;this.onDragStart=this.onDragStart.bind(this),this.onDragging=this.onDragging.bind(this),this.onDragEnd=this.onDragEnd.bind(this),t.nuSetContext("disabled",this.disabled),this.on("touchmove",t=>t.preventDefault()),["mousedown","touchstart"].forEach(t=>{this.on(t,this.onDragStart,{passive:!0})})}changed(t,e){super.changed(t,e),this.isConnected&&["min","max"].includes(t)&&this.setValue(this.value)}onDragStart(t){this.disabled||(this.setValueByEvent(t),this.dragging=!0,Object.entries(i).forEach(([t,e])=>{window.addEventListener(t,this[e],{passive:!0})}))}onDragging(t){this.dragging&&this.setValueByEvent(t)}onDragEnd(t){this.dragging&&(this.dragging=!1,Object.entries(i).forEach(([t,e])=>{window.removeEventListener(t,this[e])}))}setValueByEvent(t){const{host:e}=this,s=e.getBoundingClientRect();let i;if(this.nu("orient").then(t=>t.set(s.width>s.height?"h":"v")),s.width>s.height){const e=(t.pageX||t.touches&&t.touches.length&&t.touches[0].pageX)-window.scrollX;i=Math.max(0,Math.min(1,(e-s.x)/s.width))}else{const e=(t.pageY||t.touches&&t.touches.length&&t.touches[0].pageY)-window.scrollY;i=1-Math.max(0,Math.min(1,(e-s.y)/s.height))}this.setPercents(i)}setPercents(t){if(null==t)return;const e=this.min,s=this.max,i=this.step;this.setValue(Math.round(t*(s-e)/i)*i+e)}setValue(t,e){const{host:i}=this,n=this.min,h=this.max;t!=t&&(t=n),t<n&&(t=n),t>h&&(t=h),s(t,this.value)||(this.value=t,i.style.setProperty("--nu-local-offset",this.getOffset(t)),this.setAria("valuemin",n),this.setAria("valuemax",h),this.setAria("valuenow",t),e||this.emit("input",t),this.control())}getOffset(t){let e=this.min;return((t-e)/(this.max-e)*100).toFixed(2)+"%"}}
